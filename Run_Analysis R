# For r-analysis 
library(reshape2)
# Setting new working directory from dataset url
setwd("~/Documents/R/UCI HAR Dataset")
# Use download.file function to download to destination 
download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip",destfile = "getdata-projectfiles-UCI HAR Dataset.zip",method = "curl")
# Unzip the UCI HAR Dataset file
unzip(zipfile = "getdata-projectfiles-UCI HAR Dataset.zip")
# Assign dataset into variable DataUCI
DataUCI <- "UCI HAR Dataset"
# Combination of Test Data
# The "y" files represent the id of activity
# The "subject" files represent the id of the subject
# Create an activities list from the y_file and the activity names
# This allows the use of  activity names instead of numbers in our tidy_data
activities   <- read.table(file= paste(DataUCI, "activity_labels.txt", sep = "/"), 
                           col.names = c("Activity.ID", "Activity.Name"))
y_test <- read.table(paste(DataUCI, "test", "y_test.txt", sep = "/"),
                           col.names = c("Activity.ID"))
y_activities <- merge(y_test, activities, by.x="Activity.ID", by.y="Activity.ID")
Activity <- y_activities[,2]
# Create a vector for the feature names to apply the column names to our tidy_data
features <- read.table(paste(DataUCI, "features.txt", sep ="/"), 
                           col.names = c("Feature.Number", "Feature.Name"))
features <- features[,2]
# Create a data.frame of the subject
subject_test <- read.table(file = paste(DataUCI, "test", "subject_test.txt", sep = "/"),
                           col.names = c("Subject"))
# Use read.table for the test data and apply the column names feature
X_Dataset <- read.table(file = paste(DataUCI, "test", "X_test.txt", sep = "/"),
                                     col.names = features)
# Combine the activity, test, and subject data.frame into a single data.frame
test_data    <- cbind(subject_test,Activity, X_Dataset)
# Combine all of the Training Data using the similar method used above
y_train       <- read.table(paste(DataUCI, "train", "y_train.txt",        sep = "/"),
                            col.names = c("Activity.ID"))
y_activities  <- merge(y_train, activities, by.x="Activity.ID", by.y="Activity.ID")
Activity  <- y_activities[,2]

subject_train <- read.table(file = paste(DataUCI, "train", "subject_train.txt", sep = "/"),
                            col.names = c("Subject"))
X_train       <- read.table(file = paste(DataUCI, "train", "X_train.txt", sep = "/"),
                            col.names = features)

train_data    <- cbind(subject_train, Activity, X_train)
# Combine Test & Train data using rbind function and append the data.frames
Data <- rbind(test_data, train_data)
# Now save columns only for the mean or standard deviation (std)
# Use grep to discover the column names corresponding with either the mean or std
DataMeanStd <- Data[ ,c("Subject",
                         "Activity",
                         grep(mean), colnames(Data), value=TRUE)]
# Melt the data_mean_std variable by subject/activity and store into variable named data_sub
data_sub  <- melt(DataMeanStd, id.vars=c("Subject","Activity"))     
# Use dcast function on the data for the subject/activity and then calculate the average of these variables
# Create the tidy_data variable for final results
tidy_data     <- dcast(data_sub, Subject + Activity ~ variable, mean)
# Write the tidy_data to a unique file
# Output solely the column names of tidy_data for your CodeBook.md
cat(names(tidy_data), sep="\n")
write.table(tidy_data, row.name=FALSE, file = "tidy_data.txt")
